# Югозападен университет "Неофит Рилски"
# Курсово задание
## Описание на конзолни команди
Факултетен номер: 21251421037,ИСТ3

Конзолните програми и команди са сред основните инструменти в операционните системи, които ни позволяват да взаимодействаме с компютърната среда посредством текстов интерфейс.
Три от най-популярните конзолни програми са PowerShell, CMD и Bash.

## PowerShell
PowerShell е разработен от Microsoft и е мощен конзолен скриптов език и команден интерпретатор. Той предлага разширени възможности за автоматизация и управление на Windows операционната система. PowerShell използва обекти и команди, наречени "cmdlets", които се използват за извършване на различни задачи. В PowerShell можем да изпълняваме команди за управление на файловата система, мрежовите настройки, регистъра и много други.

Някои от най-често използваните команди в PowerShell са:
- Get-ChildItem – извежда списък с файловете и директориите в текущата директория;
- Set-Location – променя текущата директория;
- New-Item – създава нов файл или директория;
- Remove-Item – изтрива файл или директория;
- Copy-Item – копира файл или директория от едно място на друго;
- Move-Item – премества файл или директория от едно място на друго;
- Get-Process – извежда информация за текущите процеси;
- Stop-Process – спира определен процес;
- Get-Service – извежда информация за системните услуги;
- Restart-Service – рестартира определен системен сервиз.

## CMD (Command Prompt)
CMD (Command Prompt) е стандартният конзолен интерфейс на Windows. Въпреки че CMD не предлага толкова широк набор от функции като PowerShell, той все пак е полезен за изпълнение на базови операции и команди в операционната система. С CMD можем да стартираме програми, да управляваме файловата система, да конфигурираме мрежови настройки и други подобни дейности. CMD използва команди и синтаксис, които са по-подобни на тези в старите MS-DOS системи.

## Bash
Bash е стандартният команден интерпретатор и скриптов език за Unix и Linux базирани операционни системи. Той предлага мощни инструменти за автоматизация и управление на системата. Bash командите могат да бъдат използвани за навигация във файловата система, манипулиране на файлове и директории, управление на процесите и конфигуриране на системните настройки.

Някои от най-често използваните команди в Bash са:
- ls – извежда списък с файловете и директориите в текущата директория
- cd – променя текущата директория
- mkdir – създава нова директория
- rm – изтрива файл или директория
- cp – копира файл или директория от едно място на друго
- mv – премества файл или директория от едно място на друго
- ps – извежда списък с текущите процеси
- kill – спира определен процес
- grep – търси за даден израз във файл или изход от команда
- ssh – се свързва към друго устройство чрез SSH (Secure Shell) протокол.

Това са само някои от многото команди, които можете да използвате в PowerShell, CMD и Bash. Всяка от тези конзолни програми предлага богато разнообразие от команди и възможности, които могат да бъдат използвани за изпълнение на различни задачи и автоматизация на операциите във вашия компютър.

Благодарение на гъвкавостта си, Bash се използва широко в Linux системите и се счита за едно от най-мощните средства за автоматизация на задачи в командния ред.


- Type some Markdown on the left
- See HTML in the right
- ✨Magic ✨

## Features

- Import a HTML file and watch it magically convert to Markdown
- Drag and drop images (requires your Dropbox account be linked)
- Import and save files from GitHub, Dropbox, Google Drive and One Drive
- Drag and drop markdown and HTML files into Dillinger
- Export documents as Markdown, HTML and PDF

Markdown is a lightweight markup language based on the formatting conventions
that people naturally use in email.
As [John Gruber] writes on the [Markdown site][df1]

> The overriding design goal for Markdown's
> formatting syntax is to make it as readable
> as possible. The idea is that a
> Markdown-formatted document should be
> publishable as-is, as plain text, without
> looking like it's been marked up with tags
> or formatting instructions.

This text you see here is *actually- written in Markdown! To get a feel
for Markdown's syntax, type some text into the left window and
watch the results in the right.

## Tech

Dillinger uses a number of open source projects to work properly:

- [AngularJS] - HTML enhanced for web apps!
- [Ace Editor] - awesome web-based text editor
- [markdown-it] - Markdown parser done right. Fast and easy to extend.
- [Twitter Bootstrap] - great UI boilerplate for modern web apps
- [node.js] - evented I/O for the backend
- [Express] - fast node.js network app framework [@tjholowaychuk]
- [Gulp] - the streaming build system
- [Breakdance](https://breakdance.github.io/breakdance/) - HTML
to Markdown converter
- [jQuery] - duh

And of course Dillinger itself is open source with a [public repository][dill]
 on GitHub.

## Installation

Dillinger requires [Node.js](https://nodejs.org/) v10+ to run.

Install the dependencies and devDependencies and start the server.

```sh
cd dillinger
npm i
node app
```

For production environments...

```sh
npm install --production
NODE_ENV=production node app
```

## Plugins

Dillinger is currently extended with the following plugins.
Instructions on how to use them in your own application are linked below.

| Plugin | README |
| ------ | ------ |
| Dropbox | [plugins/dropbox/README.md][PlDb] |
| GitHub | [plugins/github/README.md][PlGh] |
| Google Drive | [plugins/googledrive/README.md][PlGd] |
| OneDrive | [plugins/onedrive/README.md][PlOd] |
| Medium | [plugins/medium/README.md][PlMe] |
| Google Analytics | [plugins/googleanalytics/README.md][PlGa] |

## Development

Want to contribute? Great!

Dillinger uses Gulp + Webpack for fast developing.
Make a change in your file and instantaneously see your updates!

Open your favorite Terminal and run these commands.

First Tab:

```sh
node app
```

Second Tab:

```sh
gulp watch
```

(optional) Third:

```sh
karma test
```

#### Building for source

For production release:

```sh
gulp build --prod
```

Generating pre-built zip archives for distribution:

```sh
gulp build dist --prod
```

## Docker

Dillinger is very easy to install and deploy in a Docker container.

By default, the Docker will expose port 8080, so change this within the
Dockerfile if necessary. When ready, simply use the Dockerfile to
build the image.

```sh
cd dillinger
docker build -t <youruser>/dillinger:${package.json.version} .
```

This will create the dillinger image and pull in the necessary dependencies.
Be sure to swap out `${package.json.version}` with the actual
version of Dillinger.

Once done, run the Docker image and map the port to whatever you wish on
your host. In this example, we simply map port 8000 of the host to
port 8080 of the Docker (or whatever port was exposed in the Dockerfile):

```sh
docker run -d -p 8000:8080 --restart=always --cap-add=SYS_ADMIN --name=dillinger <youruser>/dillinger:${package.json.version}
```

> Note: `--capt-add=SYS-ADMIN` is required for PDF rendering.

Verify the deployment by navigating to your server address in
your preferred browser.

```sh
127.0.0.1:8000
```

## License

MIT

**Free Software, Hell Yeah!**

[//]: # (These are reference links used in the body of this note and get stripped out when the markdown processor does its job. There is no need to format nicely because it shouldn't be seen. Thanks SO - http://stackoverflow.com/questions/4823468/store-comments-in-markdown-syntax)

   [dill]: <https://github.com/joemccann/dillinger>
   [git-repo-url]: <https://github.com/joemccann/dillinger.git>
   [john gruber]: <http://daringfireball.net>
   [df1]: <http://daringfireball.net/projects/markdown/>
   [markdown-it]: <https://github.com/markdown-it/markdown-it>
   [Ace Editor]: <http://ace.ajax.org>
   [node.js]: <http://nodejs.org>
   [Twitter Bootstrap]: <http://twitter.github.com/bootstrap/>
   [jQuery]: <http://jquery.com>
   [@tjholowaychuk]: <http://twitter.com/tjholowaychuk>
   [express]: <http://expressjs.com>
   [AngularJS]: <http://angularjs.org>
   [Gulp]: <http://gulpjs.com>

   [PlDb]: <https://github.com/joemccann/dillinger/tree/master/plugins/dropbox/README.md>
   [PlGh]: <https://github.com/joemccann/dillinger/tree/master/plugins/github/README.md>
   [PlGd]: <https://github.com/joemccann/dillinger/tree/master/plugins/googledrive/README.md>
   [PlOd]: <https://github.com/joemccann/dillinger/tree/master/plugins/onedrive/README.md>
   [PlMe]: <https://github.com/joemccann/dillinger/tree/master/plugins/medium/README.md>
   [PlGa]: <https://github.com/RahulHP/dillinger/blob/master/plugins/googleanalytics/README.md>
